找出所有相加之和为 n 的 k 个数的组合。组合中只允许含有 1 - 9 的正整数，并且每种组合中不存在重复的数字。

说明：

所有数字都是正整数。
解集不能包含重复的组合。 
示例 1:

输入: k = 3, n = 7
输出: [[1,2,4]]
示例 2:

输入: k = 3, n = 9
输出: [[1,2,6], [1,3,5], [2,3,4]]


class Solution {
public:

    vector<int> candidates = {1,2,3,4,5,6,7,8,9};
    vector<vector<int>> res;
    vector<int> path;

    void DFS(int start, int k, int target) {
        
        if ( path.size() > k )
            return; 

        if (target == 0  && path.size() == k) {
            res.push_back(path);
            return;
        }

        for (int i = start; i < 9 && target - candidates[i] >= 0; i++) {
            path.push_back(candidates[i]);
            DFS(i + 1, k, target - candidates[i]);
            path.pop_back();
        }
    }

    vector<vector<int>> combinationSum3(int n, int target) {
        DFS(0, n, target);
        return res;
    }

};
